<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Fuse - Contract First API Design with Apicurio and Fuse/Camel - Part One</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/iepacLcsmAo/fuse-contract-first-api-design-with.html" /><category term="API" scheme="searchisko:content:tags" /><category term="Design First" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_christinalineng" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-fuse_contract_first_api_design_with_apicurio_and_fuse_camel_part_one</id><updated>2018-07-05T17:53:21Z</updated><published>2018-07-05T17:46:00Z</published><content type="html">API is the new service in nowadays.&lt;br /&gt;It is the service our application provides. There are two common approaches of creating these APIs.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Code First&lt;/li&gt;&lt;li&gt;Contract First&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Coming from a old time ESB developer, these are not new. We have been doing this forever. Before, it was the WSDL that define the contract of the service. we were doing a lot more code first, for me it's simply because it's much easier for me to write couple of Java classes and generate the WSDL for my consumer.&amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-xn1vGjSAAnE/WzqGGNtRwcI/AAAAAAAAFkw/5QNFPyU4AJ4-8S8X8xjwHLL4aEjfA_B3QCLcBGAs/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B4.07.01%2BAM.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1081" data-original-width="1600" height="270" src="https://4.bp.blogspot.com/-xn1vGjSAAnE/WzqGGNtRwcI/AAAAAAAAFkw/5QNFPyU4AJ4-8S8X8xjwHLL4aEjfA_B3QCLcBGAs/s400/Screen%2BShot%2B2018-07-03%2Bat%2B4.07.01%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;It's often pretty straightforward if the consumer of your application has finalized how they want the service to be like. But you and I all know this is not often the case. So I had to go back to my code, and make the changes accordingly and pray I did not break anything in the way.&lt;br /&gt;&lt;br /&gt;Of course there is always preliminary discussion, but small changes are inevitable, and it's taking the toll of developer to&amp;nbsp;grind through the process of getting everything right.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-yveltlUuzW4/WzqLuvxMhrI/AAAAAAAAFk8/SbjUNBZ3udIGlMkTSlITPhSqKUT3N6AHgCLcBGAs/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B4.31.35%2BAM.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="894" data-original-width="1600" height="222" src="https://1.bp.blogspot.com/-yveltlUuzW4/WzqLuvxMhrI/AAAAAAAAFk8/SbjUNBZ3udIGlMkTSlITPhSqKUT3N6AHgCLcBGAs/s400/Screen%2BShot%2B2018-07-03%2Bat%2B4.31.35%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;Thanks to the new OpenAPI Specification, business user, citizen user/developer can use it to negotiate and maybe rung a couple of pre-test with the consumer before it gets handed over to developer. This design approach is called Contract First. It has become more and more popular as it avoids developer wasting time while in the process of negotiating how the service should be provided.&lt;br /&gt;&lt;br /&gt;Obviously there are many ways to do Contract First API . I am going to demonstrate how this can be done using&amp;nbsp;Apicurio and Fuse. I will be using&amp;nbsp;Apicurio to define APIs, and automatically generates the Fuse project for quick testing purpose.&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Theme: Customer Service API&lt;/span&gt;&lt;/b&gt;&lt;/h4&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-XTDagvBT42k/Wztx7K9XbJI/AAAAAAAAFlM/JqqlHpz7vXA2rKSZZz5eOckSRnVq7NnWACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.27%2BAM.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="196" src="https://1.bp.blogspot.com/-XTDagvBT42k/Wztx7K9XbJI/AAAAAAAAFlM/JqqlHpz7vXA2rKSZZz5eOckSRnVq7NnWACK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.27%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;We will be providing customer service to our consumer. For the sake of this demo, we will only start with retrieving and creating customer service.&lt;br /&gt;&lt;br /&gt;Defining Application with OpenAPI Specification in Apicurio&lt;br /&gt;&lt;br /&gt;Apicurio is a web-based Open Source tool to design OpenAPI specification. Go to&amp;nbsp;&lt;a href="https://www.apicur.io/"&gt;https://www.apicur.io/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;If you don't already have an account, please register for one.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-ChQnfK46nzg/WztygyxYt2I/AAAAAAAAFlY/HU51E1gVIqoI1M2OhSgj30wRDV4SsU0BACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.42%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="192" src="https://1.bp.blogspot.com/-ChQnfK46nzg/WztygyxYt2I/AAAAAAAAFlY/HU51E1gVIqoI1M2OhSgj30wRDV4SsU0BACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.42%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;After registering, you will be redirected to the main page of &lt;b&gt;Apicurio&lt;/b&gt;, so after discussing with the consumer on what they wish to have for the customer service, we can start creating the contract by clicking on "&lt;b&gt;Create New API&lt;/b&gt;".&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;a href="http://2.bp.blogspot.com/-PwRajchevj0/WztyzBw4vQI/AAAAAAAAFlk/YafjXYkrJL0t46mWjImoox8IoAe37u2zACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.06.13%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="332" src="https://2.bp.blogspot.com/-PwRajchevj0/WztyzBw4vQI/AAAAAAAAFlk/YafjXYkrJL0t46mWjImoox8IoAe37u2zACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.06.13%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Basically, what you need to do is pretty simple&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Create the API(Service)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Create the data definitions (if any)&amp;nbsp;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Add Paths, and define parameters, operations and return responses to the path&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Enter the name of the service, and would be nice to add some of the description to it so it's easier for people to pick up what everything means.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-nYGSbZRAjac/WzuWDhWRC8I/AAAAAAAAFpI/jzK4uncQ8FgXzCIj-K9Dc3oBgIhb8pRNgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.27.59%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="158" src="https://1.bp.blogspot.com/-nYGSbZRAjac/WzuWDhWRC8I/AAAAAAAAFpI/jzK4uncQ8FgXzCIj-K9Dc3oBgIhb8pRNgCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.27.59%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;div&gt;Set the customer definition, show the detail of info we are going exchange.&amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-lYJT8fTF56E/Wzt220wWDjI/AAAAAAAAFmI/26TUka6CyPcZfen6tCUQX-Zu1zVuC911gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.11.25%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="216" src="https://3.bp.blogspot.com/-lYJT8fTF56E/Wzt220wWDjI/AAAAAAAAFmI/26TUka6CyPcZfen6tCUQX-Zu1zVuC911gCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.11.25%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Add and define the properties and their data type.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-abCM_73sxto/Wzt4Kg7FnpI/AAAAAAAAFmU/qJbyWPUwf2sZKQfTYjPuI8p1aqXDGo3iwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.24.36%2BAM.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="178" src="https://1.bp.blogspot.com/-abCM_73sxto/Wzt4Kg7FnpI/AAAAAAAAFmU/qJbyWPUwf2sZKQfTYjPuI8p1aqXDGo3iwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.24.36%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;a href="http://4.bp.blogspot.com/-7KqBiY8QYP0/Wzt4MKqqdnI/AAAAAAAAFmc/78f-wIvgAuALhj2g5aFMyQ4gs0b02SE4QCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.27.54%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="251" src="https://4.bp.blogspot.com/-7KqBiY8QYP0/Wzt4MKqqdnI/AAAAAAAAFmc/78f-wIvgAuALhj2g5aFMyQ4gs0b02SE4QCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.27.54%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="" style="clear: both; text-align: left;"&gt;We can start adding the Paths to the doc,&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;a href="http://4.bp.blogspot.com/-swa98cIRZzs/Wzt_DIkuxMI/AAAAAAAAFms/0TjvMT6wqTI62IOrL8PayzaE9zFE3aMDQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.07.43%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="170" src="https://4.bp.blogspot.com/-swa98cIRZzs/Wzt_DIkuxMI/AAAAAAAAFms/0TjvMT6wqTI62IOrL8PayzaE9zFE3aMDQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.07.43%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Adding Parameters and define it's type.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;a href="http://4.bp.blogspot.com/-OZ3nXxrFT6I/Wzt_PNEi4HI/AAAAAAAAFm0/AoMy4DeX7ec9PmkurBta2zzT-M7b4qIBwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.04%2BAM.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" height="240" src="https://4.bp.blogspot.com/-OZ3nXxrFT6I/Wzt_PNEi4HI/AAAAAAAAFm0/AoMy4DeX7ec9PmkurBta2zzT-M7b4qIBwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.04%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;a href="http://1.bp.blogspot.com/-2x-JSSeBHj0/Wzt_mgy1fXI/AAAAAAAAFnE/B7PsCRbU3487BaAP6RnzfRJbPEgTSOHNgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.50%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="402" src="https://1.bp.blogspot.com/-2x-JSSeBHj0/Wzt_mgy1fXI/AAAAAAAAFnE/B7PsCRbU3487BaAP6RnzfRJbPEgTSOHNgCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.50%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;a href="http://4.bp.blogspot.com/-UaS3tO6kqpQ/Wzt_nSLFVHI/AAAAAAAAFnM/2p3CJNQpDRM7c6qHk0noKfcBgTj19F2hQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.58%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img border="0" height="236" src="https://4.bp.blogspot.com/-UaS3tO6kqpQ/Wzt_nSLFVHI/AAAAAAAAFnM/2p3CJNQpDRM7c6qHk0noKfcBgTj19F2hQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.58%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-nj6qZhw1GBo/Wzt_tsuHMeI/AAAAAAAAFnU/3ZGagdOEu9Q50qJaxU1QFrKgpCLeX4kxwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.29.21%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="136" src="https://3.bp.blogspot.com/-nj6qZhw1GBo/Wzt_tsuHMeI/AAAAAAAAFnU/3ZGagdOEu9Q50qJaxU1QFrKgpCLeX4kxwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.29.21%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;And responses too, (if your path needs it)&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-QmmJKkRFnqg/WzuCYXCyjoI/AAAAAAAAFno/bw8o469bwoMuZ07ey1GyZs1r1XGzJEsZQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.36.37%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="408" src="https://1.bp.blogspot.com/-QmmJKkRFnqg/WzuCYXCyjoI/AAAAAAAAFno/bw8o469bwoMuZ07ey1GyZs1r1XGzJEsZQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.36.37%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Once we are done, it's time to export the API Standard documents.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-XDM2UyK6Bsk/WzuDBZjtgwI/AAAAAAAAFn0/Ks_HsobFs1EIXRTblCpKXGW0vthr90jhQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.43.13%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="292" src="https://4.bp.blogspot.com/-XDM2UyK6Bsk/WzuDBZjtgwI/AAAAAAAAFn0/Ks_HsobFs1EIXRTblCpKXGW0vthr90jhQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.43.13%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Generating Fuse Project from Standard API Doc&lt;/span&gt;&lt;/b&gt;&lt;/h4&gt;&lt;br /&gt;Go to JBoss Developer Studio, create a new Fuse project by right click on navigation panel, select New and Fuse Integration project.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-WJPxKJf_8sQ/WzuDXnvgfNI/AAAAAAAAFoI/v5x9AxjkvO0OMc-q_fF1CeW2cBW5IWNIwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.08.18%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="224" src="https://4.bp.blogspot.com/-WJPxKJf_8sQ/WzuDXnvgfNI/AAAAAAAAFoI/v5x9AxjkvO0OMc-q_fF1CeW2cBW5IWNIwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B10.08.18%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Provide a name to the project,&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-H3aeymLiXIk/WzuDQ6MwfrI/AAAAAAAAFn8/W0u6VQx5AWg8_NPsVMYNwpeh5xZ72NEvQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.36%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="212" src="https://1.bp.blogspot.com/-H3aeymLiXIk/WzuDQ6MwfrI/AAAAAAAAFn8/W0u6VQx5AWg8_NPsVMYNwpeh5xZ72NEvQCK4BGAYYCw/s320/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.36%2BAM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We are going to do this in a microservices approach, so select the most popular runtime - Spring Boot, and we will be running this on Cloud Platform - OpenShift.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-FG9ynb0VjVg/WzuEF0ADebI/AAAAAAAAFoY/si2x1omk0pwJFHXz2z39ipS3FHMMV1EbwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.45%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="400" src="https://4.bp.blogspot.com/-FG9ynb0VjVg/WzuEF0ADebI/AAAAAAAAFoY/si2x1omk0pwJFHXz2z39ipS3FHMMV1EbwCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.45%2BAM.png" width="356" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Select the Spring DSL template.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-wy1LtMUGz7Y/WzuEaVaCtWI/AAAAAAAAFok/Y6g8jJ3aJEs2rq7uifgEyKOPnxC6N3c5QCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.59%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="400" src="https://1.bp.blogspot.com/-wy1LtMUGz7Y/WzuEaVaCtWI/AAAAAAAAFok/Y6g8jJ3aJEs2rq7uifgEyKOPnxC6N3c5QCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.59%2BAM.png" width="360" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;You will have a sample Fuse project,&lt;br /&gt;&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-8yKi5i3kJdw/WzuFrH9Y0lI/AAAAAAAAFow/AVHm18CKbkIELG0mL3uSLCnzJOMF_EsgQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.17.38%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="144" src="https://2.bp.blogspot.com/-8yKi5i3kJdw/WzuFrH9Y0lI/AAAAAAAAFow/AVHm18CKbkIELG0mL3uSLCnzJOMF_EsgQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B10.17.38%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Add the generated API Spec doc to directory: &lt;b&gt;src/spec/&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-gNgkWcdI64c/WzuNhvUnKmI/AAAAAAAAFo8/kmW2PwCHAg8sjlnNwQvvKgbxZ7dsiUqMACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.50.43%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="277" src="https://3.bp.blogspot.com/-gNgkWcdI64c/WzuNhvUnKmI/AAAAAAAAFo8/kmW2PwCHAg8sjlnNwQvvKgbxZ7dsiUqMACK4BGAYYCw/s320/Screen%2BShot%2B2018-07-03%2Bat%2B10.50.43%2BAM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Go to the &lt;b&gt;pom.xml&lt;/b&gt; file, place the following in it,&lt;br /&gt;&lt;br /&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;plugins&lt;/span&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;....&lt;/span&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;plugin&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-&lt;span style="text-decoration: underline;"&gt;restdsl&lt;/span&gt;-swagger-&lt;span style="text-decoration: underline;"&gt;plugin&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;version&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;2.21.0&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;version&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;configuration&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;specificationUri&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;src/spec/MyCustomer.json&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;specificationUri&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;fileName&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-rest.xml&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;fileName&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;outputDirectory&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;src/main/resources/spring&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;outputDirectory&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;configuration&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;plugin&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;....&lt;/span&gt;&lt;/div&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;plugin&lt;/span&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Generate the XML by running following in command line tool,&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;b&gt;&amp;nbsp; mvn camel-restdsl-swagger:generate-xml&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-aqD9wgB3KFE/WzuW2nHTU1I/AAAAAAAAFpU/HOO-xkHd89QeWNkBD2kaBjuLMbUCv9ZRQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.31.08%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="190" src="https://3.bp.blogspot.com/-aqD9wgB3KFE/WzuW2nHTU1I/AAAAAAAAFpU/HOO-xkHd89QeWNkBD2kaBjuLMbUCv9ZRQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.31.08%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;You will find a newly generated camel context named "&lt;b&gt;camel-rest.xml&lt;/b&gt;", and it has all the Path implementation in Camel.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-ZHrnbN0ukGs/WzuYTa0XpxI/AAAAAAAAFps/sAGdtJQUmDgbyJ4Nb8Zzp30F6UJ5jFcpACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.33.36%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="206" src="https://2.bp.blogspot.com/-ZHrnbN0ukGs/WzuYTa0XpxI/AAAAAAAAFps/sAGdtJQUmDgbyJ4Nb8Zzp30F6UJ5jFcpACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.33.36%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Copy everything in between "&lt;b&gt;rests&lt;/b&gt;", into the original "&lt;b&gt;camel-context.xml&lt;/b&gt;"&lt;b&gt;&amp;nbsp;&lt;/b&gt;and place in-between "&lt;b&gt;camelContext&lt;/b&gt;". and add the following rest configuration on top of the rest component.&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #932192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;restConfiguration&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;apiContextPath&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"api-docs"&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;bindingMode&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"auto"&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style="color: #932192;"&gt;component&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"undertow"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;contextPath&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"/customer"&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #932192;"&gt;enableCORS&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"true"&lt;/span&gt; &lt;span style="color: #932192;"&gt;port&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"8080"&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;apiProperty&lt;/span&gt; &lt;span style="color: #932192;"&gt;key&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"cors"&lt;/span&gt; &lt;span style="color: #932192;"&gt;value&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"true"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;apiProperty&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"api.title"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"Customer Service"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;apiProperty&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"api.version"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"1.0.0"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;restConfiguration&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;a href="http://3.bp.blogspot.com/-TcwfnhhYf_Y/WzufhZBQE5I/AAAAAAAAFp4/gJ25mM5u_5QW1qKOpiWQddOuh1daxuVIwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B12.07.58%2BPM.png" imageanchor="1"&gt;&lt;img border="0" height="222" src="https://3.bp.blogspot.com/-TcwfnhhYf_Y/WzufhZBQE5I/AAAAAAAAFp4/gJ25mM5u_5QW1qKOpiWQddOuh1daxuVIwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B12.07.58%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="font-stretch: normal; line-height: normal;"&gt;Delete&amp;nbsp;the generated "&lt;b&gt;camel-rest.xml&lt;/b&gt;".&amp;nbsp;&lt;/div&gt;&lt;h4&gt;&lt;span style="font-size: large;"&gt;Mocking the APIs with Camel&lt;/span&gt;&lt;/h4&gt;We will mock the return result by adding a constant defined bean in the camel context.&lt;br /&gt;Add a beans.xml under&amp;nbsp;&lt;b&gt;src/main.resource/spring&amp;nbsp;&lt;/b&gt;(Right click on the folder, select New-&amp;gt;beans.xml File)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-Og8GmwF5Ri8/Wz4sotd7_nI/AAAAAAAAFqI/ZJA_QTS96-0QuhKo0iLClYb4YdL87On7wCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-05%2Bat%2B10.34.50%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="346" src="https://2.bp.blogspot.com/-Og8GmwF5Ri8/Wz4sotd7_nI/AAAAAAAAFqI/ZJA_QTS96-0QuhKo0iLClYb4YdL87On7wCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-05%2Bat%2B10.34.50%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Add the follow code snap to the beans.xml&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;util:list&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"CustomerList"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;list-class&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"java.util.ArrayList"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;ref&lt;/span&gt;&amp;nbsp;&lt;span style="color: #932192;"&gt;bean&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"Customer"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;util:list&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;util:map&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"Customer"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;map-class&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"java.util.HashMap"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;entry&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"name"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"Christina"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;entry&lt;/span&gt;&amp;nbsp;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"age"&lt;/span&gt;&amp;nbsp;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"28"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;entry&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"contact"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"765483921"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;util:map&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;Add the camel route in the to "&lt;b&gt;camel-context.xml&lt;/b&gt;", the first one returns a mock customer data, the second one takes the input of a customer info.&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"rest1-route"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;from&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"restone"&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;uri&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"direct:rest1"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"route-setBody1"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;bean:CustomerList?method=get(0)&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"rest2-route"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;from&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"resttwo"&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;uri&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"direct:rest2"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;log&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"input-log"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;message&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"&amp;gt;&amp;gt;&amp;gt; ${body}"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"route-setBody2"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;Customer created&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp; &lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;Now, it's time to setup the dependency libraries into pom.xml.&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-&lt;span style="text-decoration: underline;"&gt;undertow&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal; min-height: 17px;"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-&lt;span style="text-decoration: underline;"&gt;undertow&lt;/span&gt;-starter&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal; min-height: 17px;"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-&lt;span style="text-decoration: underline;"&gt;jackson&lt;/span&gt;-starter&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal; min-height: 17px;"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-swagger-java-starter&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="caret-color: rgb(0, 0, 0); color: black; font-family: -webkit-standard; font-size: small;"&gt;Finally, it's time to test. run the follow in command line:&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;b&gt;&amp;nbsp; mvn sprint-boot:run&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;And two endpoint will be exposed for testing.&lt;br /&gt;&lt;br /&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;Christina Laptop$ curl http://YOURIP:8080/customer/id/123&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;{"name":"Christina","age":"28","contact":"765483921"}&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;Christina Laptop$ curl --header "Content-Type: application/json" &amp;nbsp; --request PUT &amp;nbsp; --data '{"name":"Christina","age":28,"contact":"765483921"}' &amp;nbsp; http://YOURIP:8080/customer/add&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;"Customer created"&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;You are now ready for the consumer to start testing the APIs.&lt;br /&gt;Next part I will take you through how to actually implement the API, expose it on Cloud and manage it.&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hFXzh/~4/WA4KftL3pHI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/iepacLcsmAo" height="1" width="1" alt=""/&gt;</content><summary>API is the new service in nowadays. It is the service our application provides. There are two common approaches of creating these APIs. Code First Contract First Coming from a old time ESB developer, these are not new. We have been doing this forever. Before, it was the WSDL that define the contract of the service. we were doing a lot more code first, for me it's simply because it's much easier fo...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-07-05T17:46:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/WA4KftL3pHI/fuse-contract-first-api-design-with.html</feedburner:origLink></entry><entry><title>Using OpenShift to deploy .NET Core applications</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zR0uacmeKRY/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="Container Development Kit" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="s2i" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-using_openshift_to_deploy_net_core_applications</id><updated>2018-07-05T17:15:29Z</updated><published>2018-07-05T17:15:29Z</published><content type="html">&lt;p&gt;Containers are the new way of deploying applications. They provide an efficient mechanism to deploy self-contained applications in a portable way across clouds and OS distributions. In this blog post we&amp;#8217;ll look at what OpenShift brings for .NET Core specifically.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Kubernetes and OpenShift&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Kubernetes&lt;/em&gt; is the de facto orchestrator for managing containerized applications. Google open-sourced Kubernetes in 2014 and Red Hat was one of the first companies to work with Google on Kubernetes. Red Hat is the 2nd leading contributor to the Kubernetes upstream project.&lt;/p&gt; &lt;p&gt;&lt;em&gt;OpenShift&lt;/em&gt; is an open-source DevOps platform that is built on top of Kubernetes. It integrates directly with your application’s source code. This enables continuous integration/continuous deployment (CI/CD) workflows. Tools are available to scale and monitor your applications. The OpenShift Catalog makes it easy to setup middleware and databases. OpenShift comes with comprehensive documentation to install and manage your installation. It can run on-prem and on public clouds such as AWS, GCP and Azure.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;.NET Core on OpenShift&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;.NET Core is an open-source, cross-platform .NET implementation. It was open-sourced in 2015 by Microsoft. Like with Kubernetes and OpenShift, this permits anyone to build, maintain and support .NET Core. Red Hat is doing this since the 1.0 release and, in tandem with Microsoft, Red Hat provides services releases and new .NET Core releases for Red Hat Enterprise Linux (RHEL) and OpenShift.&lt;/p&gt; &lt;p&gt;For RHEL, this means the .NET Core SDK and runtime are available for building and running applications. For OpenShift, it means there is a source-to-image (s2i) builder for .NET Core which makes OpenShift understand how to build .NET Core applications.&lt;/p&gt; &lt;p&gt;The s2i-builder can be tuned with &lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html/getting_started_guide/gs_dotnet_on_openshift#gs_env-var"&gt;variables&lt;/a&gt; and it supports many typical workflows. If more control is required, a custom script (&lt;code&gt;.s2i/bin/assemble&lt;/code&gt;) can be versioned with the source code that directly controls the build. Even more advanced scenarios are possible using Jenkins on OpenShift, which also supports .NET Core.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can run OpenShift on your development machine using &lt;em&gt;minishift&lt;/em&gt;. minishift comes as part of the Red Hat Container Development Kit (CDK). The &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_container_development_kit/3.1/html/getting_started_guide/getting_started_with_container_development_kit#quickstart"&gt;CDK documentation&lt;/a&gt; describes how to install and start minishift. CDK is available as part of the &lt;a href="https://developers.redhat.com/blog/2018/01/19/command-line-heros-podcast/"&gt;no-cost development subscription&lt;/a&gt;. It runs on Windows and macOS too!&lt;/p&gt; &lt;p&gt;For a production installation, you need to follow the OpenShift and cloud-vendor specific documentation. If you want to try OpenShift on the public cloud without installing it yourself, you can create a free account at &lt;a href="https://manage.openshift.com/"&gt;OpenShift Online&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once you have your OpenShift instance running, deploying an application can be done via the OpenShift web UI (called &amp;#8216;Console&amp;#8217;) or the OpenShift cli (&lt;code&gt;oc&lt;/code&gt;). The cli comes as part of the CDK installation, you can also download it from the &lt;a href="https://github.com/openshift/origin/releases"&gt;openshift/origin GitHub project&lt;/a&gt;. To deploy the application we use the &lt;code&gt;oc new-app&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ oc new-app --name=exampleapp dotnet:2.1~https://github.com/redhat-developer/s2i-dotnetcore-ex#dotnetcore-2.1 --build-env DOTNET_STARTUP_PROJECT=app&lt;/pre&gt; &lt;p&gt;This tells OpenShift to deploy a .NET Core application and name it &lt;strong&gt;exampleapp&lt;/strong&gt;. &lt;strong&gt;dotnet:2.1&lt;/strong&gt; is the name of the s2i-builder for .NET Core 2.1. &lt;strong&gt;https://github.com/redhat-developer/s2i-dotnetcore-ex&lt;/strong&gt; and &lt;strong&gt;dotnetcore-2.1&lt;/strong&gt; are the git repo and branch respectively. We set &lt;strong&gt;DOTNET_STARTUP_PROJECT&lt;/strong&gt; to tell the s2i-builder our application is in the &lt;strong&gt;app&lt;/strong&gt; directory.&lt;/p&gt; &lt;p&gt;The Console shows the status of the build and deployment:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-504667 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-1024x520.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole.png 1184w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-300x152.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-768x390.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-1024x520.png 1024w" sizes="(max-width: 1184px) 100vw, 1184px" /&gt;&lt;/p&gt; &lt;p&gt;Note that we didn&amp;#8217;t have to write a Dockerfile and use it to build an image locally. OpenShift fetched our sources from git and built them in a contained, controlled environment!&lt;/p&gt; &lt;p&gt;When new service releases of .NET Core become available, the application will automatically be rebuilt and redeployed to use the latest patch version. To enable a CI/CD workflow, OpenShift can be configured to rebuild and redeploy on source branch changes as well.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this blog post, we&amp;#8217;ve looked at the differences between Kubernetes and OpenShift. We&amp;#8217;ve also looked at how OpenShift supports .NET Core.&lt;br /&gt; The &lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html/getting_started_guide/index"&gt;.NET Core Getting Started Guide&lt;/a&gt; has more info about running .NET Core on RHEL and OpenShift. OpenShift documentation is available at &lt;a href="https://docs.openshift.com/"&gt;https://docs.openshift.com/&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;title=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" data-a2a-url="https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/" data-a2a-title="Using OpenShift to deploy .NET Core applications"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/"&gt;Using OpenShift to deploy .NET Core applications&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zR0uacmeKRY" height="1" width="1" alt=""/&gt;</content><summary>Containers are the new way of deploying applications. They provide an efficient mechanism to deploy self-contained applications in a portable way across clouds and OS distributions. In this blog post we’ll look at what OpenShift brings for .NET Core specifically. Kubernetes and OpenShift Kubernetes is the de facto orchestrator for managing containerized applications. Google open-sourced Kubernetes...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2018-07-05T17:15:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/</feedburner:origLink></entry><entry><title>3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 3)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bl66NxNce2Y/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_3</id><updated>2018-07-05T08:41:10Z</updated><published>2018-07-05T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s1600/pitfalls.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="250" data-original-width="283" height="175" src="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s200/pitfalls.png" title="" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid.&lt;br /&gt;&lt;br /&gt;From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications.&lt;br /&gt;&lt;br /&gt;Let's take a journey, looking closely at what hybrid multicloud means for your business. Let's examine the decisions being made when delivering applications and dealing with legacy applications. Likely these are some of the most important resources to your business.&lt;br /&gt;&lt;br /&gt;This article highlights three pitfalls everyone should be aware of when transitioning into hybrid multicloud environments. It's based on experiences from interactions with organizations working to conquer hybrid multicloud while delivering their solutions.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;In part one&lt;/a&gt;, we covered the basic definitions to level the playing field. We outlined our views on hybrid cloud and multicloud, making sure to show the dividing lines between the two. This set the stage &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;for part two&lt;/a&gt;, where the first pitfall discussed why cost is not always the obvious motivator for moving in to the cloud.&lt;br /&gt;&lt;br /&gt;In part three, it's time for technology and looking at the question of whether it's a good plan moving all workloads in to the cloud?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Everything better in the cloud&lt;/h3&gt;&lt;a href="https://4.bp.blogspot.com/-bP76TrXvIAk/WzzaZ8lFF-I/AAAAAAAAs3k/nHzj4e5eXEwVbec5_jwhXdkyeZ20UfouQCLcBGAs/s1600/Screen%2BShot%2B2018-07-04%2Bat%2B16.31.46.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="206" data-original-width="368" height="177" src="https://4.bp.blogspot.com/-bP76TrXvIAk/WzzaZ8lFF-I/AAAAAAAAs3k/nHzj4e5eXEwVbec5_jwhXdkyeZ20UfouQCLcBGAs/s320/Screen%2BShot%2B2018-07-04%2Bat%2B16.31.46.png" title="" width="320" /&gt;&lt;/a&gt;The second pitfall is about the misconception that everything will benefit from running in the cloud. All workloads are not equal and not all workloads moving in to the cloud result in a measurable effect on the bottom line.&lt;br /&gt;&lt;br /&gt;A &lt;a href="https://www.informationweek.com/cloud/10-cloud-migration-mistakes-to-avoid" target="_blank"&gt;recent article stated&lt;/a&gt;, "Not all business applications should migrate to the cloud, and enterprises must determine which apps are best suited to a cloud environment." A hard fact that the utility company mentioned in &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html" target="_blank"&gt;part two of this series&lt;/a&gt; found out as labor cost estimations rose while trying to move applications in to the cloud.&lt;br /&gt;&lt;br /&gt;Discovering this was not a viable solution, the utility company backed up and re-evaluated their applications. Turns out, some application were not heavily used, others had data ownership and compliance issues. Some of their applications were not certified for use in a cloud environment.&lt;br /&gt;&lt;br /&gt;Sometimes it's not physically possible to run applications in the cloud, but other times it's not financially viable to run in the cloud.&lt;br /&gt;&lt;br /&gt;Imagine a fictive online travel company. As their business grew, they expanded their hosting capacity on-premise eventually to over 40 thousand servers. It became a question of expanding their resources by purchasing a datacenter at a time, not a rack at a time. Their business consumes bandwidth at such volumes that cloud pricing models, based on bandwidth usage, remains prohibitive.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Why a baseline&lt;/h3&gt;Nothing is more important than having a thorough understanding of your application landscape, as the examples above show. Along with a good understanding what applications need to migrate to the cloud, you also need to understand current IT environments, present level of resources, and estimate costs for moving.&lt;br /&gt;&lt;br /&gt;The current situation and performance requirements (network, storage, cpu, memory, application &amp;amp; infrastructure behavior under load, etc), called a baseline, gives you the tools to make the right decision.&lt;br /&gt;&lt;br /&gt;If you’re running servers with single digit CPU utilization due complex acquisition processes, then a cloud might be a great idea with on demand resourcing. However, first ask these questions:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;How long did this low utilization exist?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Why wasn’t it caught earlier?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Isn’t there a process or effective monitoring in place?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Do you really need a cloud to fix this, or just a better process for both getting resources and managing said resources?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Will you have a better process in the cloud?&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;Container necessity&lt;/h3&gt;&lt;/div&gt;Many believe that you need containers to be successful in the cloud. The famous &lt;a href="https://speakerdeck.com/caseywest/containercon-north-america-cloud-anti-patterns" target="_blank"&gt;catch phrase&lt;/a&gt;&amp;nbsp;sums it up nicely, "We crammed this monolith into a container and called it a microservice."&lt;br /&gt;&lt;br /&gt;&lt;a href="https://4.bp.blogspot.com/-28RZcPUcB-I/WzzaqFASwlI/AAAAAAAAs3s/QoAp57iReo8bmhynb4OWqIpjG-_IqD-fQCLcBGAs/s1600/Screen%2BShot%2B2018-07-04%2Bat%2B16.32.41.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="349" data-original-width="762" height="145" src="https://4.bp.blogspot.com/-28RZcPUcB-I/WzzaqFASwlI/AAAAAAAAs3s/QoAp57iReo8bmhynb4OWqIpjG-_IqD-fQCLcBGAs/s320/Screen%2BShot%2B2018-07-04%2Bat%2B16.32.41.png" title="" width="320" /&gt;&lt;/a&gt;Containers are a means to an end, and using containers doesn’t mean your organization is capable of running maturely in the cloud. It's not about the technology involved, it's about applications that often were written in days gone by using dated technology. If you put a tire fire into a container and then put that container on a container platform (ship), it's still functionality that someone is using.&lt;br /&gt;&lt;br /&gt;Is that fire now easier to extinguish? These container fires just create more challenges for your DevOps teams, who are already struggling to keep up with all the changes being pushed through an organization moving everything into the cloud.&lt;br /&gt;&lt;br /&gt;Note, it’s not a default bad decision to move legacy workloads into the cloud, nor is it a bad idea to containerize them. It’s about weighing the benefits, the downside, assessing the options available and making the right choices for each of your workloads.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Pitfalls everyone should avoid&lt;/h3&gt;In part four of this series, the third and final pitfall is presented. A pitfall that everyone should avoid with hybrid multicloud. Find out what the cloud means for your data.&lt;br /&gt;&lt;br /&gt;Missing the start of this series? Just head on back and &lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;catch up with part 1&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/1SxkCue2P5w" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bl66NxNce2Y" height="1" width="1" alt=""/&gt;</content><summary>The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid. From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications. Let's take a journey, looking closely at ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-07-05T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/1SxkCue2P5w/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html</feedburner:origLink></entry><entry><title>Hibernate OGM 5.4.0.Beta2 release</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/32yA3UgSK_E/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="hibernate ogm" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Fabio Massimo Ercoli</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_ogm_5_4_0_beta2_release</id><updated>2018-07-05T16:10:46Z</updated><published>2018-07-05T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;a href="http://hibernate.org/ogm/releases/5.4/#get-it"&gt;Hibernate OGM 5.4.0.Beta2&lt;/a&gt; has been released!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Here’s a list of the main changes:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;We support server side indexes definition for fast queries with Neo4j.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;We support scripting and java tasks for Infinispan server.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Datastore client configuration using &lt;a href="https://github.com/wildfly/wildfly-nosql/tree/master/doc"&gt;WildFly NoSQL&lt;/a&gt; subsystem.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Support for MongoDB GeoJSON type &lt;a href="https://docs.mongodb.com/manual/reference/geojson/#geometrycollection"&gt;GeometryCollection&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;You can provide a custom Protocol Buffer schema in Infinispan remote.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan remote supports now all unidirectional collections.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan remote sequences now uses &lt;a href="http://infinispan.org/docs/stable/user_guide/user_guide.html#clustered_counters"&gt;Clustered Counters&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;More details available in the &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10160&amp;amp;version=31678"&gt;release notes&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="components-upgrade"&gt;&lt;a class="anchor" href="#components-upgrade"&gt;&lt;/a&gt;Components upgrade&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Hibernate ORM 5.3.2.Final&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Hibernate Search 5.10.2.Final&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan 5.3.0.Final&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="neo4j-server-side-indexes-definition"&gt;&lt;a class="anchor" href="#neo4j-server-side-indexes-definition"&gt;&lt;/a&gt;Neo4j server side indexes definition&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JPA 2.1+ &lt;code&gt;@Index&lt;/code&gt; annotation is now supported for Neo4j dialect. This means that Hibernate OGM will create server side indexes for you, according to the entity definition. For instance, given the following entity:&lt;/p&gt; &lt;/div&gt; &lt;div class="exampleblock"&gt; &lt;div class="content"&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span style="color:#007"&gt;@Entity&lt;/span&gt; &lt;span style="color:#007"&gt;@Table&lt;/span&gt;(indexes = { &lt;span style="color:#007"&gt;@Index&lt;/span&gt;(columnList = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;firstname,lastname&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;i class="conum" data-value="1"&gt;&lt;/i&gt;&lt;b&gt;(1)&lt;/b&gt; &lt;span style="color:#007"&gt;@Index&lt;/span&gt;(columnList = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;middlename&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;), &lt;i class="conum" data-value="2"&gt;&lt;/i&gt;&lt;b&gt;(2)&lt;/b&gt; &lt;span style="color:#007"&gt;@Index&lt;/span&gt;(columnList = &lt;span style="background-color:hsla(0,100%,50%,0.05)"&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;span style="color:#D20"&gt;nickname&lt;/span&gt;&lt;span style="color:#710"&gt;"&lt;/span&gt;&lt;/span&gt;, unique = &lt;span style="color:#069"&gt;true&lt;/span&gt;) &lt;i class="conum" data-value="3"&gt;&lt;/i&gt;&lt;b&gt;(3)&lt;/b&gt; }) &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;static&lt;/span&gt; &lt;span style="color:#339;font-weight:bold"&gt;class&lt;/span&gt; &lt;span style="color:#B06;font-weight:bold"&gt;Person&lt;/span&gt; { &lt;span style="color:#007"&gt;@Id&lt;/span&gt; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; id; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; firstname; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; middlename; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; lastname; &lt;span style="color:#088;font-weight:bold"&gt;private&lt;/span&gt; &lt;span style="color:#0a8;font-weight:bold"&gt;String&lt;/span&gt; nickname; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Hibernate OGM will create three indexes:&lt;/p&gt; &lt;/div&gt; &lt;div class="olist arabic"&gt; &lt;ol class="arabic"&gt; &lt;li&gt; &lt;p&gt;an index, allowing duplicates, on field pair (firstname, lastname)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;an index, allowing duplicates, on field middlename&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;an index, not allowing duplicates, on field nickname&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="where-can-i-get-hibernate-ogm"&gt;&lt;a class="anchor" href="#where-can-i-get-hibernate-ogm"&gt;&lt;/a&gt;Where can I get Hibernate OGM?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can include in your project the dialect of your choice using these Maven coordinates:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://infinispan.org"&gt;Infinispan&lt;/a&gt;&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Remote: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-infinispan-remote:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Embedded: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-infinispan-embedded:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://www.mongodb.com"&gt;MongoDB&lt;/a&gt;: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-mongodb:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://neo4j.com"&gt;Neo4j&lt;/a&gt;: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-neo4j:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Infinispan Remote: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-featurepack-infinispan-remote:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Infinispan Embedded: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-featurepack-infinispan-embedded:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;MongoDB: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-featurepack-mongodb:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Neo4j: &lt;em&gt;org.hibernate.ogm:hibernate-ogm-featurepack-neo4j:5.4.0.Beta2&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Alternatively, you can download archives containing all the binaries, source code and documentation &lt;a href="https://sourceforge.net/projects/hibernate/files/hibernate-ogm/5.4.0.Beta2"&gt;from Sourceforge&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are interested about available versions, you can check the official &lt;a href="http://hibernate.org/ogm/releases"&gt;Hibernate OGM download page&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="how-can-i-get-in-touch"&gt;&lt;a class="anchor" href="#how-can-i-get-in-touch"&gt;&lt;/a&gt;How can I get in touch?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can find us through the following channels:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/c/hibernate-ogm"&gt;User forum&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://hibernate.atlassian.net/browse/OGM"&gt;Issue tracker&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://lists.jboss.org/pipermail/hibernate-dev/"&gt;Mailing list&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://stackoverflow.com"&gt;Stack Overflow&lt;/a&gt;: we monitor the tag &lt;em&gt;hibernate-ogm&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://www.hipchat.com/gXEjW5Wgg"&gt;HipChat&lt;/a&gt;: Hibernate OGM hipchat room&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="contributions"&gt;&lt;a class="anchor" href="#contributions"&gt;&lt;/a&gt;Contributions&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Some of the new features have been contributed by: Aleksandr Mylnikov, Sergey Chernolyas, The Viet Nguyen and Aliaksandr Salauyou. Thanks a lot guys!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Looking forward to hearing your feedback!&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/32yA3UgSK_E" height="1" width="1" alt=""/&gt;</content><summary>Hibernate OGM 5.4.0.Beta2 has been released! Here’s a list of the main changes: We support server side indexes definition for fast queries with Neo4j. We support scripting and java tasks for Infinispan server. Datastore client configuration using WildFly NoSQL subsystem. Support for MongoDB GeoJSON type GeometryCollection. You can provide a custom Protocol Buffer schema in Infinispan remote. Infin...</summary><dc:creator>Fabio Massimo Ercoli</dc:creator><dc:date>2018-07-05T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/05/hibernate-ogm-5-4-Beta2-released/</feedburner:origLink></entry><entry><title>Keycloak 4.1.0.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oSBJrbBta_g/keycloak-410final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Marek Posolda</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_1_0_final_released</id><updated>2018-07-04T20:05:03Z</updated><published>2018-07-04T20:05:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.1.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oSBJrbBta_g" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Marek Posolda</dc:creator><dc:date>2018-07-04T20:05:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/07/keycloak-410final-released.html</feedburner:origLink></entry><entry><title>Apache Camel 2.22 Released with Spring Boot 2 support</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TAafCrMBlSE/apache-camel-222-released-with-spring.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_2_22_released_with_spring_boot_2_support</id><updated>2018-07-04T12:08:35Z</updated><published>2018-07-04T12:08:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Today we released the latest &lt;a href="http://camel.apache.org/2018/07/03/apache-camel-2220-released.html"&gt;Apache Camel 2.22.0 release&lt;/a&gt; which is the first release to officially fully support Spring Boot 2. This is a major effort as the Spring Boot v1 to v2 upgrade for a big framework like Apache Camel took some effort - so many thanks to the Camel team and the contributions. The support for Spring Boot 2 was the major goal of this release and therefore this release comes as soon as possible after the previous Camel 2.21 release, and as such, this release does not contain as much else as a normal release happens to include.&lt;br /&gt;&lt;br /&gt;The Spring team has already updated their start.spring.io website to now include Apache Camel when you use Spring Boot 2. If you are using Spring Boot 1, then the previous versions of Apache Camel, such as 2.21.1 works with SB1.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-PpWt-Vbn32Y/Wzy1X40_AWI/AAAAAAAABpU/mQa9OZP-zrYfYL780fFYRrDMkfV0TKw4gCLcBGAs/s1600/camel-sb2.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="580" data-original-width="1051" height="220" src="https://1.bp.blogspot.com/-PpWt-Vbn32Y/Wzy1X40_AWI/AAAAAAAABpU/mQa9OZP-zrYfYL780fFYRrDMkfV0TKw4gCLcBGAs/s400/camel-sb2.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;The release also includes some other noteworthy improvements such as an internal optimisation to the toD EIP with HTTP endpoints to better reuse existing http connections when sending to the same host with all sort of dynamic parameters.&lt;br /&gt;&lt;br /&gt;The Rest DSL has also been improved to support specifying security definitions that will be included in swagger doc. We also added support for enabling client request validation so the Rest DSL can validate whether a request can be processed based on its content-type and accepted response-type, and whether all mandatory parameters is included, and so on.&lt;br /&gt;&lt;br /&gt;There is also a number of new components:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;camel-as2 -&amp;nbsp;Component used for transferring data secure and reliable over the internet using the AS2 protocol.&lt;/li&gt;&lt;li&gt;camel-google-mail-stream -&amp;nbsp;The google-mail component provides access to Google Mail.&lt;/li&gt;&lt;li&gt;camel-micrometer -&amp;nbsp;To collect various metrics directly from Camel routes using the Micrometer library.&lt;/li&gt;&lt;li&gt;camel-mybatis-bean -&amp;nbsp;Performs a query, insert, update or delete in a relational database using MyBatis.&lt;/li&gt;&lt;li&gt;camel-service -&amp;nbsp;Represents an endpoint which only becomes active when the CamelClusterView has the leadership.&lt;/li&gt;&lt;li&gt;camel-web3j -&amp;nbsp;The web3j component uses the Web3j client API and allows you to add/read nodes to/from a web3j compliant content repositories.&lt;/li&gt;&lt;li&gt;camel-rxjava2 -&amp;nbsp;RxJava2 based back-end for Camel’s reactive streams component&lt;/li&gt;&lt;li&gt;camel-testcontainers -&amp;nbsp;Camel support for testcontainers&lt;/li&gt;&lt;li&gt;camel-testcontainers-spring -&amp;nbsp;Camel unit testing with Spring and testcontainers&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;The next bigger Camel release is expected to be Camel 2.23 where we also would work on getting more of the documentation migrated to the new system, and with some luck have a new website and documentation ready for this release.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Also we will start to discuss the roadmap and bigger goal of Apache Camel 3 in the community. When this happens then we will post more about this in our blogs and elsewhere, so keep an eye if you are interested to help and provide your thoughts on this matter.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Now go and enjoy the Camel on Spring Boot 2.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=vloC65AzIkI:sW0PCR92XU4:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=vloC65AzIkI:sW0PCR92XU4:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=vloC65AzIkI:sW0PCR92XU4:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=vloC65AzIkI:sW0PCR92XU4:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/vloC65AzIkI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TAafCrMBlSE" height="1" width="1" alt=""/&gt;</content><summary>Today we released the latest Apache Camel 2.22.0 release which is the first release to officially fully support Spring Boot 2. This is a major effort as the Spring Boot v1 to v2 upgrade for a big framework like Apache Camel took some effort - so many thanks to the Camel team and the contributions. The support for Spring Boot 2 was the major goal of this release and therefore this release comes as ...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2018-07-04T12:08:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/vloC65AzIkI/apache-camel-222-released-with-spring.html</feedburner:origLink></entry><entry><title>Hibernate ORM 5.1.15.Final released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/OOTRmpurjqg/" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Gail Badner</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_orm_5_1_15_final_released</id><updated>2018-07-05T13:56:33Z</updated><published>2018-07-04T00:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Hibernate ORM 5.1.15.Final:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;tag is &lt;a href="http://github.com/hibernate/hibernate-orm/releases/tag/5.1.15"&gt;here&lt;/a&gt;;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;changes are listed &lt;a href="https://hibernate.atlassian.net/projects/HHH/versions/31670"&gt;here&lt;/a&gt; (or, for people without a Hibernate Jira account, &lt;a href="https://hibernate.atlassian.net/secure/ReleaseNote.jspa?projectId=10031&amp;amp;version=31670"&gt;here&lt;/a&gt;);&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;release bundles are at &lt;a href="http://sourceforge.net/projects/hibernate/files/hibernate-orm/5.1.15.Final/"&gt;SourceForge&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For information on consuming the release via your favorite dependency-management-capable build tool, see &lt;a href="http://hibernate.org/orm/releases/5.1" class="bare"&gt;http://hibernate.org/orm/releases/5.1&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/OOTRmpurjqg" height="1" width="1" alt=""/&gt;</content><summary>Hibernate ORM 5.1.15.Final: tag is here; changes are listed here (or, for people without a Hibernate Jira account, here); release bundles are at SourceForge. For information on consuming the release via your favorite dependency-management-capable build tool, see http://hibernate.org/orm/releases/5.1</summary><dc:creator>Gail Badner</dc:creator><dc:date>2018-07-04T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/04/hibernate-orm-5115-final-release/</feedburner:origLink></entry><entry><title>Customising path patterns for your Apiman Gateway</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3AENywN72xA/custom-url-parser.html" /><category term="feed_group_name_apiman" scheme="searchisko:content:tags" /><category term="feed_name_apiman" scheme="searchisko:content:tags" /><author><name>Marc Savy</name></author><id>searchisko:content:id:jbossorg_blog-customising_path_patterns_for_your_apiman_gateway</id><updated>2018-07-03T20:00:00Z</updated><published>2018-07-03T20:00:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;One common request we here is how to create custom URL patterns for the Apiman Gateway.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example, this means allowing changing the (Public API) default:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;http://gatewayhost:port/{organizationId}/{apiId}/{version}/&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To a custom alternative. As a simple example we&amp;#8217;re going to hard-code an organisation in. We&amp;#8217;ll assume that we&amp;#8217;ve established a convention to always publish our APIs to a particular org. That will change the pattern to:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;http://gatewayhost:port/{apiId}/{version}/&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; If you&amp;#8217;re using the Vert.x Gateway you should use Apiman 1.4.3.Final or later as a bug prevented plugins from loading from static config. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="create-a-plugin-skeleton"&gt;Create a plugin skeleton&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="admonitionblock tip"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-tip" title="Tip"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; Check &lt;a href="http://www.apiman.io/latest/developer-guide.html#_creating_a_plugin"&gt;out our documentation for creating Apiman Plugins&lt;/a&gt; for more in-depth information. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;One of Apiman&amp;#8217;s handiest features is its plugin subsystem. This allows you to fully modularise custom code and distribute it through familiar channels like Maven repositories. It&amp;#8217;s much more convenient than trying to play around with customising the class-path and messing around to make sure files are in the right place.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First, check out this plugin skeleton:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;$ git clone http://github.com/apiman/apiman-plugins.git $ cd custom-path-parser-demo/&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Have a look at &lt;code&gt;CustomPathParserImpl.java&lt;/code&gt;. It implements &lt;code&gt;IApiRequestPathParser&lt;/code&gt; and takes the incoming path and headers; it returns an &lt;code&gt;ApiRequestPathInfo&lt;/code&gt; that instructs Apiman what the &lt;code&gt;orgId&lt;/code&gt;, &lt;code&gt;apiId&lt;/code&gt;, &lt;code&gt;apiVersion&lt;/code&gt;, and &lt;code&gt;resource&lt;/code&gt; are, allowing Apiman to map the incoming request correctly.&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="directive"&gt;public&lt;/span&gt; &lt;span class="type"&gt;class&lt;/span&gt; &lt;span class="class"&gt;CustomPathParserImpl&lt;/span&gt; &lt;span class="directive"&gt;implements&lt;/span&gt; IApiRequestPathParser { &lt;span class="annotation"&gt;@Override&lt;/span&gt; &lt;span class="directive"&gt;public&lt;/span&gt; ApiRequestPathInfo parseEndpoint(&lt;span class="predefined-type"&gt;String&lt;/span&gt; path, HeaderMap headers) { &lt;span class="comment"&gt;// Your custom path logic&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For reference the default implementation is &lt;a href="https://github.com/apiman/apiman/blob/master/gateway/engine/core/src/main/java/io/apiman/gateway/engine/impl/DefaultRequestPathParser.java"&gt;io.apiman.gateway.engine.impl.DefaultRequestPathParser&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="creating-our-custom-version"&gt;Creating our custom version&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In our demonstration &lt;code&gt;CustomPathParserImpl&lt;/code&gt; we will use a very simple parser that doesn&amp;#8217;t inspect any headers. I recommend you check the default implementation to find &lt;a href="https://github.com/apiman/apiman/blob/master/common/util/src/main/java/io/apiman/common/util/ApimanPathUtils.java"&gt;utilities&lt;/a&gt; that handles alternative ways of capturing versioning info, such as accept headers, version headers, etc.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;First we&amp;#8217;ll add a constructor with a string map. This will allow us to pass in configuration information from our static config file (&lt;code&gt;apiman.properties&lt;/code&gt; or &lt;code&gt;conf.json&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="java"&gt;&lt;span class="directive"&gt;final&lt;/span&gt; &lt;span class="predefined-type"&gt;String&lt;/span&gt; defaultOrgName; &lt;span class="directive"&gt;public&lt;/span&gt; CustomPathParserImpl(&lt;span class="predefined-type"&gt;Map&lt;/span&gt;&amp;lt;&lt;span class="predefined-type"&gt;String&lt;/span&gt;, &lt;span class="predefined-type"&gt;String&lt;/span&gt;&amp;gt; config) { &lt;span class="comment"&gt;// Pass in the defaultOrgName from static config or just use &amp;quot;DefaultOrg&amp;quot;.&lt;/span&gt; &lt;span class="local-variable"&gt;this&lt;/span&gt;.defaultOrgName = config.getOrDefault(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;defaultOrgName&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;DefaultOrg&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;); } &lt;span class="directive"&gt;public&lt;/span&gt; ApiRequestPathInfo parseEndpoint(&lt;span class="predefined-type"&gt;String&lt;/span&gt; path, HeaderMap headers) { &lt;span class="predefined-type"&gt;String&lt;/span&gt;&lt;span class="type"&gt;[]&lt;/span&gt; split = StringUtils.split(path, &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;/&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class="integer"&gt;3&lt;/span&gt;); &lt;span class="keyword"&gt;if&lt;/span&gt; (split == &lt;span class="predefined-constant"&gt;null&lt;/span&gt; || split.length &amp;lt; &lt;span class="integer"&gt;2&lt;/span&gt;) { &lt;span class="keyword"&gt;throw&lt;/span&gt; &lt;span class="keyword"&gt;new&lt;/span&gt; &lt;span class="exception"&gt;IllegalArgumentException&lt;/span&gt;(&lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;Invalid path format, expected /apiId/apiVersion/&amp;lt;resource path&amp;gt;&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;); } ApiRequestPathInfo parsed = &lt;span class="keyword"&gt;new&lt;/span&gt; ApiRequestPathInfo(); &lt;span class="comment"&gt;// Let's set the org name manually as our configured `defaultOrgName`&lt;/span&gt; parsed.orgId = defaultOrgName; parsed.apiId = split[&lt;span class="integer"&gt;0&lt;/span&gt;]; parsed.apiVersion = split[&lt;span class="integer"&gt;1&lt;/span&gt;]; &lt;span class="keyword"&gt;if&lt;/span&gt; (split.length &amp;gt; &lt;span class="integer"&gt;2&lt;/span&gt;) { parsed.resource = &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;/&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; + split[&lt;span class="integer"&gt;2&lt;/span&gt;]; } &lt;span class="keyword"&gt;else&lt;/span&gt; { parsed.resource = &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;/&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;; } &lt;span class="keyword"&gt;return&lt;/span&gt; parsed; }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;So now, if we have a path like this:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;/FooApi/1.0/some/resource&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This will become:&lt;/p&gt; &lt;/div&gt; &lt;div class="dlist"&gt; &lt;dl&gt; &lt;dt class="hdlist1"&gt;orgId&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;DefaultOrg&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;apiId&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;FooApi&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;apiVersion&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;1.0&lt;/p&gt; &lt;/dd&gt; &lt;dt class="hdlist1"&gt;resource&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;/some/resource&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Which would be the equivalent of the default style of:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;code&gt;/DefaultOrg/FooApi/1.0/some/resource&lt;/code&gt;&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="wiring-it-up"&gt;Wiring it up&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; Change the versions as applicable. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Run &lt;code&gt;mvn clean install&lt;/code&gt; at the demo project&amp;#8217;s root. Then open your Apiman configuration file (either apiman.properties or conf.json).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the Vert.x Gateway:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="json"&gt;&lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;request-parser&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;class&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;plugin:io.apiman.plugins:custom-path-parser-plugin-demo:1.4.3.Final:war/io.apiman.plugins.demo.custompathparser.CustomPathParserImpl&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;config&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: { &lt;span class="key"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;defaultOrgName&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;: &lt;span class="string"&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;span class="content"&gt;Apiman&lt;/span&gt;&lt;span class="delimiter"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt; &lt;span class="error"&gt;/&lt;/span&gt;&lt;span class="error"&gt;/&lt;/span&gt; &lt;span class="error"&gt;W&lt;/span&gt;&lt;span class="error"&gt;h&lt;/span&gt;&lt;span class="error"&gt;a&lt;/span&gt;&lt;span class="error"&gt;t&lt;/span&gt;&lt;span class="error"&gt;e&lt;/span&gt;&lt;span class="error"&gt;v&lt;/span&gt;&lt;span class="error"&gt;e&lt;/span&gt;&lt;span class="error"&gt;r&lt;/span&gt; &lt;span class="error"&gt;y&lt;/span&gt;&lt;span class="error"&gt;o&lt;/span&gt;&lt;span class="error"&gt;u&lt;/span&gt; &lt;span class="error"&gt;l&lt;/span&gt;&lt;span class="error"&gt;i&lt;/span&gt;&lt;span class="error"&gt;k&lt;/span&gt;&lt;span class="error"&gt;e&lt;/span&gt; } }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For the Servlet Gateway:&lt;/p&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code data-lang="properties"&gt;apiman-gateway.request-parser=plugin:io.apiman.plugins:custom-path-parser-plugin-demo:1.4.3.Final:war/io.apiman.plugins.demo.custompathparser.CustomPathParserImpl apiman-gateway.request-parser.defaultOrgName=Apiman // Whatever you like&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="listingblock"&gt; &lt;div class="content"&gt; &lt;pre class="CodeRay highlight"&gt;&lt;code&gt;$ curl 'http://localhost:8082/TheApi/2' { "method" : "GET", "resource" : "/services/echo/foobar/", "uri" : "/services/echo/foobar/", "headers" : { "Accept" : "*/*", "Host" : "localhost:8080", "transfer-encoding" : "chunked", "User-Agent" : "curl/7.54.0" }, "bodyLength" : null, "bodySha1" : null, "counter" : 2 }&lt;/code&gt;&lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="admonitionblock note"&gt; &lt;table&gt; &lt;tr&gt; &lt;td class="icon"&gt; &lt;i class="fa icon-note" title="Note"&gt;&lt;/i&gt; &lt;/td&gt; &lt;td class="content"&gt; Double check that your plugin is structured correctly and you have all of the names right in your plugin URL. Otherwise you will get errors complaining that your classes are not found. &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We created a simple plugin to provide custom URL mappings to the Apiman Gateway and configured our gateways to use our code.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A future improvement extending IApiRequestPathParser will allow for the Apiman Gateway to report URLs back to the Apiman Manager (or whomever publishes) in a more granular fashion (rather than just using &lt;code&gt;parseEndpoint&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3AENywN72xA" height="1" width="1" alt=""/&gt;</content><summary>One common request we here is how to create custom URL patterns for the Apiman Gateway. For example, this means allowing changing the (Public API) default: http://gatewayhost:port/{organizationId}/{apiId}/{version}/ To a custom alternative. As a simple example we’re going to hard-code an organisation in. We’ll assume that we’ve established a convention to always publish our APIs to a particular or...</summary><dc:creator>Marc Savy</dc:creator><dc:date>2018-07-03T20:00:00Z</dc:date><feedburner:origLink>http://apiman.io/blog/apiman/gateway/manager/plugin/extensibility/2018/07/03/custom-url-parser.html</feedburner:origLink></entry><entry><title>Version 1.4.3 of Apiman is released!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5vxh_AO58OY/release-1.4.3.html" /><category term="feed_group_name_apiman" scheme="searchisko:content:tags" /><category term="feed_name_apiman" scheme="searchisko:content:tags" /><author><name>Marc Savy</name></author><id>searchisko:content:id:jbossorg_blog-version_1_4_3_of_apiman_is_released</id><updated>2018-07-03T19:20:00Z</updated><published>2018-07-03T19:20:00Z</published><content type="html">&lt;div class="paragraph"&gt; &lt;p&gt;Apiman 1.4.3.Final is out. It contains a couple of bug-fixes. Most notably, a bug in the Vert.x Gateway that prevented plugins specified in static config (&lt;code&gt;conf.json&lt;/code&gt;) from being loaded properly.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you experience any issues, please report them to us via &lt;a href="https://issues.jboss.org/browse/APIMAN/"&gt;JIRA&lt;/a&gt;, &lt;a href="https://github.com/apiman/apiman"&gt;GitHub&lt;/a&gt;, or &lt;a href="https://lists.jboss.org/mailman/listinfo/apiman-user"&gt;the mailing list&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="download-1-4-3-final"&gt;Download 1.4.3.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-vertx-1.4.3.Final.zip"&gt;Vert.x (Gateway Only)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-wildfly10-1.4.3.Final-overlay.zip"&gt;WildFly 10 or EAP 7.1&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-wildfly11-1.4.3.Final-overlay.zip"&gt;WildFly 11&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-eap7-1.4.3.Final-overlay.zip"&gt;EAP 7&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://downloads.jboss.org/apiman/1.4.3.Final/apiman-distro-tomcat8-1.4.3.Final-overlay.zip"&gt;Tomcat 8+&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="release-notes"&gt;Release Notes&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12314121&amp;amp;version=12338183"&gt;1.4.3.Final&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;div class="title"&gt;Bugs&lt;/div&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://issues.jboss.org/browse/APIMAN-1338"&gt;APIMAN-1338&lt;/a&gt; - Non-policy plugins not being loaded properly from Vert.x static config&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://issues.jboss.org/browse/APIMAN-1340"&gt;APIMAN-1340&lt;/a&gt; - NPE when starting&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5vxh_AO58OY" height="1" width="1" alt=""/&gt;</content><summary>Apiman 1.4.3.Final is out. It contains a couple of bug-fixes. Most notably, a bug in the Vert.x Gateway that prevented plugins specified in static config (conf.json) from being loaded properly. If you experience any issues, please report them to us via JIRA, GitHub, or the mailing list. Download 1.4.3.Final Vert.x (Gateway Only) WildFly 10 or EAP 7.1 WildFly 11 EAP 7 Tomcat 8+ Release Notes 1.4.3....</summary><dc:creator>Marc Savy</dc:creator><dc:date>2018-07-03T19:20:00Z</dc:date><feedburner:origLink>http://apiman.io/blog/apiman/release/2018/07/03/release-1.4.3.html</feedburner:origLink></entry><entry><title>Blogging has moved</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tunUUnmSJLk/blogging-has-moved.html" /><category term="feed_group_name_teiid" scheme="searchisko:content:tags" /><category term="feed_name_teiid" scheme="searchisko:content:tags" /><author><name>Steven Hawkins</name></author><id>searchisko:content:id:jbossorg_blog-blogging_has_moved</id><updated>2018-07-03T19:15:14Z</updated><published>2018-07-03T18:57:00Z</published><content type="html">Now that we have worked the kinks out of our new &lt;a href="http://teiid.io/"&gt;teiid.io&lt;/a&gt; site, we've added a simple blogging feature there &lt;a href="http://teiid.io/blog"&gt;teiid.io/blog&lt;/a&gt;. For the time being however that means that some features will not there - such as an RSS feed or comments. As we get more familiar with Hugo, we'll add necessary features.&lt;br /&gt;&lt;br /&gt;Thank you,&lt;br /&gt;Steve&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tunUUnmSJLk" height="1" width="1" alt=""/&gt;</content><summary>Now that we have worked the kinks out of our new teiid.io site, we've added a simple blogging feature there teiid.io/blog. For the time being however that means that some features will not there - such as an RSS feed or comments. As we get more familiar with Hugo, we'll add necessary features. Thank you, Steve</summary><dc:creator>Steven Hawkins</dc:creator><dc:date>2018-07-03T18:57:00Z</dc:date><feedburner:origLink>http://teiid.blogspot.com/2018/07/blogging-has-moved.html</feedburner:origLink></entry></feed>
